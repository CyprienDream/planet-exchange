<!DOCTYPE html>
<html>
  <head>
    <title>Address Selection</title>
    <script>
    "use strict";

    function initMap() {
      const componentForm = [
        'location',
        'locality',
        'administrative_area_level_1',
        'country',
        'postal_code',
      ];
      const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 11,
        center: { lat: 37.4221, lng: -122.0841 },
        mapTypeControl: false,
        fullscreenControl: true,
        zoomControl: true,
        streetViewControl: true
      });
      const marker = new google.maps.Marker({map: map, draggable: false});
      const autocompleteInput = document.getElementById('location');
      const autocomplete = new google.maps.places.Autocomplete(autocompleteInput, {
        fields: ["address_components", "geometry", "name"],
        types: ["address"],
      });
      autocomplete.addListener('place_changed', function () {
        marker.setVisible(false);
        const place = autocomplete.getPlace();
        if (!place.geometry) {
          // User entered the name of a Place that was not suggested and
          // pressed the Enter key, or the Place Details request failed.
          window.alert('No details available for input: \'' + place.name + '\'');
          return;
        }
        renderAddress(place);
        fillInAddress(place);
      });

      function fillInAddress(place) {  // optional parameter
        const addressNameFormat = {
          'street_number': 'short_name',
          'route': 'long_name',
          'locality': 'long_name',
          'administrative_area_level_1': 'short_name',
          'country': 'long_name',
          'postal_code': 'short_name',
        };
        const getAddressComp = function (type) {
          for (const component of place.address_components) {
            if (component.types[0] === type) {
              return component[addressNameFormat[type]];
            }
          }
          return '';
        };
        document.getElementById('location').value = getAddressComp('street_number') + ' '
                  + getAddressComp('route');
        for (const component of componentForm) {
          // Location field is handled separately above as it has different logic.
          if (component !== 'location') {
            document.getElementById(component).value = getAddressComp(component);
          }
        }
      }

      function renderAddress(place) {
        map.setCenter(place.geometry.location);
        marker.setPosition(place.geometry.location);
        marker.setVisible(true);
      }
    }
    </script>
  </head>
  <body>
        <div class="container d-flex flex-column">
          <h2>Create a new storage room</h2>

          <div class="mt-4">
            <%= simple_form_for @storage do |f| %>
              <%# <%= f.input :address,
                            required: true,
                            autofocus: true,
                            placeholder: "Address",
                            id: 'location',
                            class: "pac-target-input" %>
              <input type="text" placeholder="Address" id="location"/>
              <%= f.association :items,
                                  as: :check_boxes,
                                  multiple: true %>
              <%= f.button :submit, "Create storage", class: "btn btn-white" %>
            <% end %>
          </div>
        </div>
    <%# <div class="card-container"> %>
      <%# <div class="panel"> %>
        <%# <div> %>
          <%# <img class="sb-title-icon" src="https://fonts.gstatic.com/s/i/googlematerialicons/location_pin/v5/24px.svg" alt=""> %>
          <%# <span class="sb-title">Address Selection</span> %>
        <%# </div> %>
        <%# <input type="text" placeholder="Apt, Suite, etc (optional)"/> %>
        <%# <input type="text" placeholder="City" id="locality"/> %>
        <%# <div class="half-input-container"> %>
          <%# <input type="text" class="half-input" placeholder="State/Province" id="administrative_area_level_1"/> %>
          <%# <input type="text" class="half-input" placeholder="Zip/Postal code" id="postal_code"/> %>
        <%# </div> %>
        <%# <input type="text" placeholder="Country" id="country"/> %>
        <%# <button class="button-cta">Checkout</button> %>
      <%# </div> %>
    <%# </div> %>
      <div class="map" id="map" style="display:none"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDC9LZC67e3qFKLk8-RSOQPV0lmCHZ6i4s&libraries=places&callback=initMap&solution_channel=GMP_QB_addressselection_v1_cABC" async defer></script>
  </body>
</html>
